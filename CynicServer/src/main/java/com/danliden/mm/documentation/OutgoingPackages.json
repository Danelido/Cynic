{
  "Outgoing packages": {
    "NOT_CONNECTED": {
      "PacketId": "A Valid packet type, in this case \"NOT_CONNECTED\""
    },

    "JOIN_ACCEPTED": {
      "PacketId": "A Valid packet type, in this case \"JOIN_ACCEPTED\"",
      "AId": "Unique ack id that the client needs to answer back",
      "PlayerId": "Id of the player",
      "Rdy": "Have the player voted to start the game session as boolean",
      "Tmstmp" : "Timestamp as String (currentTimeMillis)"
    },

    "LOST_CLIENT": {
      "_comment": "Vote reset is engaged with this packet",
      "PacketId": "A Valid packet type, in this case \"LOST_CLIENT\"",
      "PlayerId": "Id of the player that was lost",
      "Tmstmp" : "Timestamp as String (currentTimeMillis)"
    },

    "HEARTBEAT_REQUEST": {
      "PacketId": "A Valid packet type, in this case \"HEARTBEAT_REQUEST\"",
      "Tmstmp" : "Timestamp as String (currentTimeMillis)"
    },

    "UPDATED_CLIENT": {
      "PacketId": "A Valid packet type, in this case \"UPDATED_CLIENT\"",
      "PlayerId": "Id of the updated player",
      "X": "The updated x position of the player",
      "Y": "The updated y position of the player",
      "Thrt": "If the player is holding the throttle(gas) as boolean",
      "Rot": "The start rotation of the player",
      "Tmstmp" : "Timestamp as String (currentTimeMillis)"
    },

    "DECLINED_JOIN_REQUEST": {
      "PacketId": "A Valid packet type, in this case \"DECLINED_JOIN_REQUEST\""
    },

    "NEW_PLAYER_JOINED": {
      "_comment": "Vote reset is engaged with this packet",
      "PacketId": "A Valid packet type, in this case \"NEW_PLAYER_JOINED\"",
      "AId": "Unique ack id that the client needs to answer back",
      "PlayerId": "Id of the new player",
      "Rdy": "Have the player voted to start the game session",
      "Name": "Name of the new player (Not supported)",
      "Tmstmp" : "Timestamp as String (currentTimeMillis)"
    },

    "PLAYER_VOTE_TO_START": {
      "PacketId": "A Valid packet type, in this case \"PLAYER_VOTE_TO_START\"",
      "PlayerId": "Id of the player that voted to start",
      "AId": "Unique ack id that the client needs to answer back",
      "PreName": "Name of the ship prefab",
      "Shprc": "Ship color red component (0.0 - 1.0)",
      "Shpgc": "Ship color green component (0.0 - 1.0)",
      "Shpbc": "Ship color blue component (0.0 - 1.0)",
      "Tmstmp" : "Timestamp as String (currentTimeMillis)"
    },

    "PLAYER_REMOVE_VOTE_TO_START": {
      "PacketId": "A Valid packet type, in this case \"PLAYER_REMOVE_VOTE_TO_START\"",
      "PlayerId": "Id of the player that removed their vote",
      "AId": "Unique ack id that the client needs to answer back",
      "Tmstmp" : "Timestamp as String (currentTimeMillis)"
    },

    "STARTING_GAME": {
      "PacketId": "A Valid packet type, in this case \"STARTING_GAME\"",
      "AId": "Unique ack id that the client needs to answer back",
      "StartPos": "Starting positions of players, ex: PlayerId:xPos,yPos;PlayerId:xPos,yPos;PlayerId:xPos,yPos;PlayerId:xPos,yPos",
      "Tmstmp" : "Timestamp as String (currentTimeMillis)"
    },

    "PLAYER_SHIP_CHANGE": {
      "PacketId": "A Valid packet type, in this case \"PLAYER_SHIP_CHANGE\"",
      "AId": "Unique ack id that the client needs to answer back",
      "PlayerId": "Id of who changed ship",
      "PreName": "Name of the ship prefab",
      "Tmstmp" : "Timestamp as String (currentTimeMillis)"
    },

    "PLACEMENT_UPDATE": {
      "PacketId": "A Valid packet type, in this case \"PLACEMENT_UPDATE\"",
      "Plcs": "Placements as a string containing player ids in order. example \"4,2,1,3\" where playerId 4 is in first place",
      "Tmstmp" : "Timestamp as String (currentTimeMillis)"
    },

    "FATAL_SERVER_ERROR": {
      "PacketId": "A Valid packet type, in this case \"FATAL_SERVER_ERROR\"",
      "AId": "Unique ack id that the client needs to answer back",
      "FatErr" : "Server error message as string",
      "Tmstmp" : "Timestamp as String (currentTimeMillis)"
    },

    "DOOM_TIMER": {
      "PacketId": "A Valid packet type, in this case \"DOOM_TIMER\"",
      "AId": "Unique ack id that the client needs to answer back",
      "Dmt": "Time left on doom timer in ms",
      "Tmstmp" : "Timestamp as String (currentTimeMillis)"
    },

    "END_OF_RACE": {
      "PacketId": "A Valid packet type, in this case \"END_OF_RACE\"",
      "AId": "Unique ack id that the client needs to answer back",
      "Plcs": "Placements as a string containing player ids in order. example \"4,2,1,3\" where playerId 4 is in first place",
      "Tmstmp" : "Timestamp as String (currentTimeMillis)"
    },

    "LOOKING_AT_PLACEMENTS_TIMER" : {
      "PacketId": "A Valid packet type, in this case \"LOOKING_AT_PLACEMENTS_TIMER\"",
      "AId": "Unique ack id that the client needs to answer back",
      "Eort": "Time left in ms",
      "Tmstmp" : "Timestamp as String (currentTimeMillis)"
    },

    "BACK_TO_LOBBY" : {
      "PacketId": "A Valid packet type, in this case \"BACK_TO_LOBBY\"",
      "AId": "Unique ack id that the client needs to answer back"
    },

    "SESSION_COUNTDOWN" : {
      "PacketId": "A Valid packet type, in this case \"SESSION_COUNTDOWN\"",
      "AId": "Unique ack id that the client needs to answer back",
      "Tmstmp" : "Timestamp as String (currentTimeMillis)"
    },

    "START_RACE" : {
      "PacketId": "A Valid packet type, in this case \"START_RACE\"",
      "AId": "Unique ack id that the client needs to answer back"
    }
  }

}